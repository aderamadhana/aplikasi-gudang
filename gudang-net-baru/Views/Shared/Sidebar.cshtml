@using System.Text.Json
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor Http

@{
    var controller = ViewContext.RouteData.Values["controller"]?.ToString();
    var action = ViewContext.RouteData.Values["action"]?.ToString(); 
    var user = await userManager.GetUserAsync(User);
    var roles = user != null ? await userManager.GetRolesAsync(user) : new List<string>();
    var session_role = @Context.Session.GetString("UserRole");
    var json = Http.HttpContext!.Session.GetString("Menu");
    var menu = string.IsNullOrWhiteSpace(json)
        ? new List<MenuDto>()
        : JsonSerializer.Deserialize<List<MenuDto>>(json);

    // safety: if any node has null Children, treat as empty
    void EnsureChildrenNotNull(IEnumerable<MenuDto> nodes)
    {
        foreach (var n in nodes)
        {
            n.Children ??= new List<MenuDto>();
            EnsureChildrenNotNull(n.Children);
        }
    }
    EnsureChildrenNotNull(menu);

    // Map menuName -> controller (adjust as needed)
    string ControllerOf(string name) => name switch
    {
        "Dashboard" => "Home",
        _ => name // "User" -> UserController, "Role" -> RoleController, etc.
    };

    bool IsActive(string name, string currentController) =>
        string.Equals(ControllerOf(name), currentController, StringComparison.OrdinalIgnoreCase);
}

@using Microsoft.AspNetCore.Identity;
@using gudang_net_baru.Models.Konfigurasi.Menu
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> userManager;

<aside class="sidebar d-none d-lg-flex p-3">
    <div class="d-flex flex-column w-100">
        <div class="nav-section">
            Ganti Role
        </div>
        <select id="roleSelect" class="form-select form-select-sm text-uppercase fw-bold">
            @foreach (var role in roles)
            {
                <option value="@role" selected="@(role == session_role)">
                    @role.ToUpper()
                </option>
            }
        </select>
        @foreach (var menu_items in menu)
        {
            @if (menu_items.MenuType == "label")
            {
                <div class="nav-section">@menu_items.MenuName</div>
            }
            else if (menu_items.Children.Any())
            {
                // parent with submenu
                var isOpen = menu_items.Children.Any(c => IsActive(c.ControllerName, controller));
                var submenuId = $"submenu_{menu_items.IdMenu}";

                <div class="has-submenu @(isOpen ? "is-open" : "")">
                    <button class="submenu-toggle" type="button"
                            aria-expanded="@(isOpen ? "true" : "false")"
                            aria-controls="@submenuId">
                        <i class="bi @menu_items.MenuIcon"></i> @menu_items.MenuName
                        <span class="arrow"><i class="bi bi-caret-down-fill"></i></span>
                    </button>

                    <div class="submenu @(isOpen ? "is-open" : "")" id="@submenuId">
                        @foreach (var child in menu_items.Children.OrderBy(c => c.Urutan))
                        {
                            var childCtrl = ControllerOf(child.ControllerName);
                            <a class="nav-link @(IsActive(child.ControllerName, controller) ? "active" : "")"
                               asp-area=""
                               asp-controller="@childCtrl"
                               asp-action="Index">
                                @child.MenuName
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                // single link (no children)
                var linkCtrl = ControllerOf(menu_items.ControllerName);
                <a class="nav-link @(IsActive(menu_items.MenuName, controller) ? "active" : "")"
                   asp-area=""
                   asp-controller="@linkCtrl"
                   asp-action="Index">
                    <i class="bi bi-grid-1x2"></i> @menu_items.MenuName
                </a>
            }
        }
    </div>
</aside>

<!-- Offcanvas (mobile) -->
<div class="offcanvas offcanvas-start" id="offcanvasSidebar" aria-labelledby="offcanvasSidebarLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasSidebarLabel">Menu</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Tutup"></button>
    </div>
    <div class="offcanvas-body">
        <div class="nav-section">
            Ganti Role
        </div>
        <select id="roleSelectMinimize" class="form-select form-select-sm text-uppercase fw-bold">
            @foreach (var role in roles)
            {
                <option value="@role" selected="@(role == session_role)">
                    @role.ToUpper()
                </option>
            }
        </select>
        @foreach (var menu_items in menu)
        {
            @if (menu_items.MenuType == "label")
            {
                <div class="nav-section">@menu_items.MenuName</div>
            }
            else if (menu_items.Children.Any())
            {
                // parent with submenu
                var isOpen = menu_items.Children.Any(c => IsActive(c.ControllerName, controller));
                var submenuId = $"submenu_{menu_items.IdMenu}";

                <div class="has-submenu @(isOpen ? "is-open" : "")">
                    <button class="submenu-toggle" type="button"
                            aria-expanded="@(isOpen ? "true" : "false")"
                            aria-controls="@submenuId">
                        <i class="bi @menu_items.MenuIcon"></i> @menu_items.MenuName
                        <span class="arrow"><i class="bi bi-caret-down-fill"></i></span>
                    </button>

                    <div class="submenu @(isOpen ? "is-open" : "")" id="@submenuId">
                        @foreach (var child in menu_items.Children.OrderBy(c => c.Urutan))
                        {
                            var childCtrl = ControllerOf(child.ControllerName);
                            <a class="nav-link @(IsActive(child.ControllerName, controller) ? "active" : "")"
                               asp-area=""
                               asp-controller="@childCtrl"
                               asp-action="Index">
                                @child.MenuName
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                // single link (no children)
                var linkCtrl = ControllerOf(menu_items.ControllerName);
                <a class="nav-link @(IsActive(menu_items.MenuName, controller) ? "active" : "")"
                   asp-area=""
                   asp-controller="@linkCtrl"
                   asp-action="Index">
                    <i class="bi bi-grid-1x2"></i> @menu_items.MenuName
                </a>
            }
        }
    </div>
</div>
<script>
    $("#roleSelect").on("change", function () {
        var selectedRole = $(this).val();

        $.post('/Login/SetRoleSession', { role: selectedRole }, function () {
            showAlert("Role berhasil diganti!","success");
           
            setTimeout(function () {
                location.reload();
            }, 1000); // reload setelah 1 detik
        });
    });
    
    $("#roleSelectMinimize").on("change", function () {
        var selectedRole = $(this).val();

        $.post('/Login/SetRoleSession', { role: selectedRole }, function () {
            showAlert("Role berhasil diganti!","success");

            setTimeout(function () {
                location.reload();
            }, 1000); // reload setelah 1 detik
        });
    });
</script>